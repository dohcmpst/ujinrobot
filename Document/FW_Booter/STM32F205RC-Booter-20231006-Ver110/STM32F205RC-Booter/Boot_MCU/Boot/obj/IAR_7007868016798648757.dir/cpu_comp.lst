###############################################################################
#
# IAR ANSI C/C++ Compiler V9.40.1.364/W64 for ARM         06/Oct/2023  13:39:20
# Copyright 1999-2023 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        R:\STM32F205RC-Booter\Source\ARMCM3_STM32F2\IAR\cpu_comp.c
#    Command line      =
#        -f
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir\cpu_comp.o.rsp
#        (R:\STM32F205RC-Booter\Source\ARMCM3_STM32F2\IAR\cpu_comp.c -D
#        USE_HAL_DRIVER -D USE_FULL_LL_DRIVER -D STM32F205xx -lcN
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir -o
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.4\arm\inc\c\DLib_Config_Normal.h" -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\ -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\ -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\CMSIS\Device\ST\STM32F2xx\Include\
#        -I R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\CMSIS\Include\ -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\fatfs\ -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\STM32F2xx_HAL_Driver\Inc\
#        -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\lib\STM32F2xx_HAL_Driver\Inc\Legacy\
#        -I R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\..\..\Source\ -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\..\..\Source\ARMCM3_STM32F2\
#        -I
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\ide\..\..\..\Source\third_party\fatfs\src\
#        -Ol) --dependencies=n
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir\cpu_comp.o.iar_deps
#    Locale            =  C
#    List file         =
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir\cpu_comp.lst
#    Object file       =
#        R:\STM32F205RC-Booter\Boot_MCU\Boot\obj\IAR_7007868016798648757.dir\cpu_comp.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

R:\STM32F205RC-Booter\Source\ARMCM3_STM32F2\IAR\cpu_comp.c
      1          /************************************************************************************//**
      2          * \file         Source/ARMCM3_STM32F2/IAR/cpu_comp.c
      3          * \brief        Bootloader cpu module source file.
      4          * \ingroup      Target_ARMCM3_STM32F2
      5          * \internal
      6          *----------------------------------------------------------------------------------------
      7          *                          C O P Y R I G H T
      8          *----------------------------------------------------------------------------------------
      9          *   Copyright (c) 2018  by Feaser    http://www.feaser.com    All rights reserved
     10          *
     11          *----------------------------------------------------------------------------------------
     12          *                            L I C E N S E
     13          *----------------------------------------------------------------------------------------
     14          * This file is part of OpenBLT. OpenBLT is free software: you can redistribute it and/or
     15          * modify it under the terms of the GNU General Public License as published by the Free
     16          * Software Foundation, either version 3 of the License, or (at your option) any later
     17          * version.
     18          *
     19          * OpenBLT is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
     20          * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     21          * PURPOSE. See the GNU General Public License for more details.
     22          *
     23          * You have received a copy of the GNU General Public License along with OpenBLT. It
     24          * should be located in ".\Doc\license.html". If not, contact Feaser to obtain a copy.
     25          *
     26          * \endinternal
     27          ****************************************************************************************/
     28          
     29          /****************************************************************************************
     30          * Include files
     31          ****************************************************************************************/
     32          #include "boot.h"                                /* bootloader generic header          */
     33          #include <intrinsics.h>                          /* IAR intrinsics                     */
     34          
     35          
     36          /************************************************************************************//**
     37          ** \brief     Disable global interrupts.
     38          ** \return    none.
     39          **
     40          ****************************************************************************************/
     41          void CpuIrqDisable(void)
     42          {
     43            __disable_interrupt();
     44          } /*** end of CpuIrqDisable ***/
     45          
     46          
     47          /************************************************************************************//**
     48          ** \brief     Enable global interrupts.
     49          ** \return    none.
     50          **
     51          ****************************************************************************************/
     52          void CpuIrqEnable(void)
     53          {
     54            __enable_interrupt();
     55          } /*** end of CpuIrqEnable ***/
     56          
     57          /*********************************** end of cpu_comp.c *********************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   CpuIrqDisable
       0   CpuIrqEnable


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  CpuIrqDisable
       4  CpuIrqEnable

 
 8 bytes in section .text
 
 8 bytes of CODE memory

Errors: none
Warnings: none
